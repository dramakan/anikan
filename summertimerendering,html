<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Review & Watch Summer Time Rendering - Anikan</title>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="style.css">
    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

    <style>
        :root {
            --color-primary: #e50914;
            --color-secondary: #444;
            --color-background: #141414;
            --color-surface: #1e1e1e;
            --color-text: #ffffff;
            --color-text-muted: #8c8c8c;
            --font-family-main: 'Poppins', sans-serif;
        }
        body {
            font-family: var(--font-family-main);
            background-color: var(--color-background);
            color: var(--color-text);
            margin: 0;
            line-height: 1.6;
        }
        .main-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 5%;
            background: linear-gradient(to bottom, rgba(0,0,0,0.7) 10%, rgba(0,0,0,0));
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            z-index: 100;
        }
        .logo { text-decoration: none; color: var(--color-primary); font-size: 2rem; font-weight: 700; }
        .logo span { color: var(--color-text); }
        .nav-links a { margin: 0 1rem; text-decoration: none; color: var(--color-text); font-weight: 500; }
        .hero-banner {
            height: 70vh;
            background-size: cover;
            background-position: center;
            display: flex;
            align-items: flex-end;
            padding: 5%;
            position: relative;
        }
        .hero-banner::after { content: ''; position: absolute; bottom: 0; left: 0; right: 0; height: 50%; background: linear-gradient(to top, var(--color-background), transparent); }
        .hero-content { z-index: 10; }
        .hero-content h1 { font-size: 3.5rem; margin: 0; }
        .hero-meta { margin: 0.5rem 0 1.5rem; }
        .hero-meta span { margin: 0 0.5rem; }
        .btn { padding: 0.75rem 1.5rem; border: none; border-radius: 5px; font-weight: 600; cursor: pointer; text-decoration: none; display: inline-block; }
        .btn-primary { background-color: var(--color-primary); color: var(--color-text); }
        .btn-secondary { background-color: var(--color-secondary); color: var(--color-text); }
        .btn i { margin-right: 0.5rem; }
        
        .review-main-content {
            display: grid;
            grid-template-columns: 250px 1fr;
            gap: 2rem;
            padding: 2rem 5%;
            margin-top: -10vh; /* Pull content up over gradient */
            position: relative;
            z-index: 20;
        }
        .left-sidebar .movie-poster { width: 100%; border-radius: 8px; }
        .mobile-hero-buttons { display: none; }
        .watchlist-section button { width: 100%; margin-top: 1rem; padding: 0.75rem; background-color: var(--color-secondary); color: var(--color-text); border: none; border-radius: 5px; font-size: 1rem; cursor: pointer; }
        
        .info-panel { display: flex; justify-content: space-between; align-items: flex-start; background-color: var(--color-surface); padding: 1.5rem; border-radius: 8px; }
        .info-details ul { list-style: none; padding: 0; margin: 0; }
        .info-details li { margin-bottom: 0.5rem; }
        .info-details li strong { color: var(--color-text-muted); }
        .info-rating-circle { text-align: center; }
        .rating-circle-bg { width: 100px; height: 100px; border-radius: 50%; background: conic-gradient(var(--color-primary) calc(var(--rating-percent, 0) * 1%), var(--color-secondary) 0); display: flex; justify-content: center; align-items: center; }
        .rating-circle-inner { width: 80px; height: 80px; border-radius: 50%; background: var(--color-surface); display: flex; flex-direction: column; justify-content: center; align-items: center; }
        .rating-score { font-size: 2rem; font-weight: 700; color: var(--color-primary); }
        .rating-max { font-size: 0.8rem; color: var(--color-text-muted); }
        .personal-rating-note { font-size: 0.7rem; color: var(--color-text-muted); margin-top: 0.5rem; }

        .section-title { font-size: 1.8rem; margin: 2rem 0 1rem 0; border-bottom: 2px solid var(--color-primary); padding-bottom: 0.5rem; }
        .synopsis-panel { background-color: var(--color-surface); padding: 1.5rem; border-radius: 8px; }
        
        .photos-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; }
        .photos-grid img { width: 100%; height: auto; border-radius: 8px; }
        
        .trailer-panel .player-container { position: relative; padding-bottom: 56.25%; /* 16:9 */ height: 0; overflow: hidden; }
        .trailer-panel iframe { position: absolute; top: 0; left: 0; width: 100%; height: 100%; border-radius: 8px; }
        
        .characters-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 1rem; }
        .character-card { background-color: var(--color-surface); border-radius: 8px; text-align: center; padding: 1rem; }
        .character-card img { width: 100px; height: 100px; border-radius: 50%; object-fit: cover; margin-bottom: 0.5rem; }
        .character-card h4 { margin: 0; font-size: 0.9rem; }
        
        .official-stream-grid { display: flex; gap: 1rem; align-items: center; }
        .stream-logo { background-color: #fff; padding: 0.5rem; border-radius: 8px; display: inline-block; }
        .stream-logo img { height: 40px; width: auto; display: block; }
        
        /* Watch Section */
        .watch-section { display: none; padding: 2rem 5%; }
        body.watching-active .review-wrapper { display: none; }
        body.watching-active .watch-section { display: block; }
        body.watching-active .main-header { position: static; background: var(--color-background); }

        .watch-layout { display: grid; grid-template-columns: 1fr 300px; gap: 2rem; }
        .video-player-container { position: relative; padding-bottom: 56.25%; height: 0; background: #000; }
        .video-player-container iframe { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }
        
        .EP-meta { display: flex; justify-content: space-between; align-items: center; background-color: var(--color-surface); padding: 1rem; margin-top: 1rem; border-radius: 8px; }
        .EP-title { margin: 0; font-size: 1.5rem; }
        .EP-actions .action-btn { background: var(--color-secondary); color: var(--color-text); border: none; padding: 0.5rem 1rem; border-radius: 5px; cursor: pointer; }
        .EP-actions .action-btn:disabled { background: #333; cursor: not-allowed; }
        .EP-actions .action-btn i { margin: 0 0.3rem; }
        
        .widget { background-color: var(--color-surface); border-radius: 8px; margin-top: 2rem; overflow: hidden; }
        .widget-title { background-color: var(--color-secondary); padding: 1rem; margin: 0; font-size: 1.2rem; }
        
        .EPs-list { max-height: 400px; overflow-y: auto; }
        .EP-item { display: flex; padding: 0.75rem; border-bottom: 1px solid #333; text-decoration: none; color: var(--color-text); }
        .EP-item:hover { background-color: #333; }
        .EP-item.current { background-color: var(--color-primary); }
        .EP-thumbnail { width: 100px; height: 56px; object-fit: cover; border-radius: 5px; margin-right: 1rem; }
        .ep-number { font-weight: 600; margin: 0; }
        .ep-desc { font-size: 0.9rem; color: var(--color-text-muted); margin: 0; }
        .EP-item.current .ep-desc { color: var(--color-text); }
        
        .download-list table { width: 100%; border-collapse: collapse; }
        .download-list th, .download-list td { padding: 0.75rem; text-align: left; border-bottom: 1px solid #333; }
        .download-list th { background-color: #2a2a2a; }
        .download-btn { color: var(--color-primary); text-decoration: none; font-weight: 600; }
        
        .drama-info-widget .info-poster img { width: 100%; }
        .info-title-sidebar { padding: 1rem 1rem 0; margin: 0; }
        .drama-info-widget .info-details { padding: 1rem; }
        .drama-info-widget .info-details p { margin: 0.5rem 0; }
        .drama-info-widget .info-details span:first-child { color: var(--color-text-muted); }
        .recommendations-list { padding: 1rem; }

        @media (max-width: 900px) {
            .watch-layout { grid-template-columns: 1fr; }
            .sidebar-col { grid-row: 1; }
        }
        @media (max-width: 768px) {
            .review-main-content { grid-template-columns: 1fr; }
            .left-sidebar .movie-poster { display: none; }
            .mobile-hero-buttons { display: flex; gap: 1rem; margin-bottom: 1.5rem; }
            .mobile-hero-buttons .btn { flex: 1; text-align: center; }
            .hero-content h1 { font-size: 2.5rem; }
            .info-panel { flex-direction: column-reverse; align-items: center; gap: 1.5rem; }
            .download-list { overflow-x: auto; }
            .download-list table { min-width: 600px; }
            .download-list td::before { content: attr(data-label); font-weight: bold; float: left; }
            .download-list td { display: block; text-align: right !important; }
            .download-list thead { display: none; }
        }
    </style>
</head>
<body>

    <header class="main-header">
        <a href="home.html" class="logo">Ani<span>kan</span></a>
        <nav class="nav-links">
            <a href="home.html">Home</a>
            <a href="movies.html">Movies</a>
            <a href="categories.html">Genre</a>
        </nav>
        <div class="main-header .search-bar" style="display: none;">
            <i class="fas fa-search"></i>
            <input type="text" placeholder="Search...">
        </div>
        <div class="main-header .user-profile" style="display: none;">
            <img src="profile.jpg" alt="User Profile">
        </div>
    </header>

    <main>
        <div class="review-wrapper" id="review-wrapper">
            <section class="hero-banner" id="hero-banner-section">
                <div class="hero-content">
                    <h1 id="anime-title-main"></h1>
                    <div class="hero-meta">
                        <span id="hero-meta-year"></span>
                        <span>&bull;</span>
                        <span id="hero-meta-type"></span>
                        <span>&bull;</span>
                        <span id="hero-meta-duration"></span>
                    </div>
                    <div class="hero-buttons">
                        <button class="btn btn-primary" id="play-button"><i class="fas fa-play"></i>Watch</button>
                        <button class="btn btn-secondary" id="trailer-button"><i class="fas fa-film"></i> Trailer</button>
                    </div>
                </div>
            </section>
            
            <div class="review-main-content">
                <div class="left-sidebar">
                    <img id="anime-poster" class="movie-poster" src="" alt="Anime Poster">
                    
                    <div class="mobile-hero-buttons">
                        <button class="btn btn-primary" id="mobile-play-button"><i class="fas fa-play"></i>Watch</button>
                        <button class="btn btn-secondary" id="mobile-trailer-button"><i class="fas fa-film"></i> Trailer</button>
                    </div>
                    
                    <div class="watchlist-section">
                        <button id="add-to-watchlist-btn"><i class="fas fa-plus"></i> Add to Watchlist</button>
                        <div class="user-rating-stars" id="user-rating-stars">
                        </div>
                    </div>
                </div>

                <div>
                    <div class="info-panel">
                        <div class="info-details">
                            <ul>
                                <li><strong>Title:</strong> <span id="info-title"></span></li>
                                <li><strong>Cast:</strong> <span id="info-cast"></span></li>
                                <li><strong>Creator:</strong> <span id="info-creator"></span></li>
                                <li><strong>Genre:</strong> <span id="info-genre"></span></li>
                            </ul>
                        </div>
                        <div class="info-rating-circle">
                            <div class="rating-circle-bg" id="rating-circle">
                                <div class="rating-circle-inner">
                                    <span class="rating-score" id="rating-score"></span>
                                    <span class="rating-max">out of 10</span>
                                </div>
                            </div>
                            <p class="personal-rating-note">note: personal rating only</p>
                        </div>
                    </div>

                    <div class="synopsis-panel">
                        <h2 class="section-title">Synopsis</h2>
                        <p id="synopsis-text"></p>
                    </div>

                    <h2 class="section-title">Photos</h2>
                    <div class="photos-grid" id="photos-grid"></div>

                    <h2 class="section-title">Official Trailer</h2>
                    <div class="trailer-panel">
                        <div class="player-container">
                            <iframe id="trailer-player" src="" title="Official Trailer Player" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen loading="lazy"></iframe>
                         </div>
                    </div>

                    <h2 class="section-title">Main Characters</h2>
                    <div class="characters-grid" id="character-list"></div>

                    <h2 class="section-title">Who is this Anime for?</h2>
                    <div class="synopsis-panel">
                        <p id="anime-audience"></p>
                    </div>

                    <h2 class="section-title">Where to Watch Officially</h2>
                    <div class="official-stream-grid" id="official-streams"></div>
                </div>
            </div>
        </div>
        
        <section class="watch-section" id="watch-section">
            <div class="watch-layout" id="watch-layout">
                <div class="main-content-col">
                    <div class="video-player-container">
                        <iframe 
                            id="video-player-iframe"
                            src="" 
                            title="Video Player" 
                            frameborder="0" 
                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
                            allowfullscreen>
                        </iframe>
                    </div>

                    <div class="EP-meta">
                        <h1 class="EP-title" id="current-EP-title"></h1>
                        <div class="EP-actions">
                            <button class="action-btn" id="prev-ep-btn"><i class="fas fa-arrow-left"></i>Prev</button>
                            <button class="action-btn" id="next-ep-btn">Next<i class="fas fa-arrow-right"></i></button>
                        </div>
                    </div>
                    
                    <div class="widget EPs-list-widget">
                        <h2 class="widget-title">EPs</h2>
                        <div class="EPs-list" id="EPs-list-container">
                        </div>
                    </div>
                    
                    <div class="widget download-widget">
                        <h2 class="widget-title">Download (Placeholder Links)</h2>
                        <div class="download-list">
                            <table>
                                <thead>
                                    <tr><th>EP</th><th>Quality</th><th>Video</th><th>Subtitles</th></tr>
                                </thead>
                                <tbody id="download-links-tbody">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="sidebar-col">
                    <div class="widget drama-info-widget">
                        <div class="info-poster"><img id="sidebar-poster" src="" alt="Anime Poster"></div>
                        <h2 class="info-title-sidebar" id="sidebar-title"></h2>
                        <div class="info-details">
                            <p><span>Type:</span> <span id="sidebar-type"></span></p>
                            <p><span>EPs:</span> <span id="sidebar-EPs"></span></p>
                            <p><span>Duration:</span> <span id="sidebar-duration"></span></p>
                            <p><span>Studio:</span> <span id="sidebar-studio"></span></p>
                            <p><span>Score:</span> <span id="sidebar-score"></span></p>
                            <p><span>Genres:</span> <span id="sidebar-genres"></span></p>
                        </div>
                    </div>
                    <div class="widget recommendations-widget">
                        <h2 class="widget-title">More from Anikan</h2>
                        <div class="recommendations-list">
                           <p style="color: var(--color-text-muted); font-size: 0.9rem;">Recommendation list placeholder.</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        </main>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // --- Data: Summer Time Rendering ---
            const selectedAnime = {
                id: 2, title: 'Summer Time Rendering', title_japanese: 'サマータイムレンダ',
                cast: ['Shinpei Ajiro', 'Ushio Kofune', 'Mio Kofune'],
                characters: [
                    { name: 'Shinpei Ajiro', image: 'https://s4.anilist.co/file/anilistcdn/character/large/b132808-V6nF3l4mYpkN.png' },
                    { name: 'Ushio Kofune', image: 'https://s4.anilist.co/file/anilistcdn/character/large/b132809-D6bNfTmWb4kL.png' },
                    { name: 'Mio Kofune', image: 'https://s4.anilist.co/file/anilistcdn/character/large/b134629-lS1l2c5M1Bna.png' }
                ],
                creator: 'Yasuki Tanaka', studio: 'OLM', type: 'TV Series', EPs: 25,
                genres: ['Mystery', 'Supernatural', 'Thriller', 'Suspense'],
                duration: '23 min', rating: 8.5,
                description: "Upon hearing of Ushio's death, Shinpei returns to his hometown of Wakayama City on Hitogashima and reunites with his childhood friend's family. The funeral goes smoothly, but under the surface, something strange is brewing on the island. What mysteries await him on this remote summer island?",
                audience: 'Perfect for fans of intense mystery and suspense. If you enjoy time-loop mechanics (like Re:Zero or Steins;Gate) combined with a creepy, unsettling horror vibe, this is for you. It\'s a thriller that keeps you guessing.',
                coverImage: 'https://s4.anilist.co/file/anilistcdn/media/anime/cover/large/bx129201-Pf1S1bE6N3oF.jpg',
                bgImage: 'https://images.alphacoders.com/123/1235435.jpg',
                releaseYear: 2022,
                trailer_url: 'https://www.youtube.com/embed/w_J3f2pYjls',
                official_streams: [
                    { platform: 'Disney+', logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3e/Disney%2B_logo.svg/1200px-Disney%2B_logo.svg.png' },
                    { platform: 'Hulu', logo: 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/Hulu_Logo.svg/1200px-Hulu_Logo.svg.png' }
                ],
                gallery: [
                    'https://static.zerochan.net/Summer.Time.Render.full.3621406.jpg',
                    'https://www.otaquest.com/wp-content/uploads/2021/07/summer-time-rendering-anime.jpg',
                    'https://pbs.twimg.com/media/FTkFvW6VIAA_Lh1.jpg:large',
                    'https://images4.alphacoders.com/125/1253457.jpg',
                    'https://images8.alphacoders.com/123/1233069.png',
                    'https://images2.alphacoders.com/123/1230491.jpg'
                ]
            };

            // --- EP DATA: Summer Time Rendering (25 EPs) ---
            const EPData = [
                { number: 1, title: 'EP 1: Goodbye, Summer Days', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=1', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 2, title: 'EP 2: Shadow', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=2', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 3, title: 'EP 3: Tachypsyche', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=3', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 4, title: 'EP 4: Jamais Vu', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=4', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 5, title: 'EP 5: Maelstrom', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=5', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 6, title: 'EP 6: Orbital Resonance', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=6', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 7, title: 'EP 7: Enemy', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=7', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 8, title: 'EP 8: Memento', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=8', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 9, title: 'EP 9: Flow, My Tears', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=9', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 10, title: 'EP 10: Into the Darkness', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=10', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 11, title: 'EP 11: Feeding Time', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=11', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 12, title: 'EP 12: Bloody Night', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=12', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 13, title: 'EP 13: Friend', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=13', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 14, title: 'EP 14: To Be/Not to Be', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=14', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 15, title: 'EP 15: Lights, Camera, Action', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=15', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 16, title: 'EP 16: Original', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=16', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 17, title: 'EP 17: Decision', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=17', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 18, title: 'EP 18: Meeting', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=18', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 19, title: 'EP 19: Maid in Black', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=19', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 20, title: 'EP 20: All Is Not Lost', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=20', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 21, title: 'EP 21: Shinpei Ajiro\'s Longest Day', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=21', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 22, title: 'EP 22: Homecoming', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=22', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 23, title: 'EP 23: The Tide', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=23', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 24, title: 'EP 24: Summertime Re-rendering', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=24', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' },
                { number: 25, title: 'EP 25: I\'m Home', videoUrl: 'https://multiembed.mov/?video_id=tt13702400&s=1&e=25', thumbnail: 'https://images.alphacoders.com/123/1230490.jpg', downloads: { '1080p': '#', '720p': '#', '480p': '#' }, subtitleUrl: '#' }
            ];
            
            // --- Page Elements ---
            const videoPlayer = document.getElementById('video-player-iframe');
            const EPsListContainer = document.getElementById('EPs-list-container');
            const downloadLinksTbody = document.getElementById('download-links-tbody');
            const currentEPTitle = document.getElementById('current-EP-title');
            const prevBtn = document.getElementById('prev-ep-btn');
            const nextBtn = document.getElementById('next-ep-btn');

            // --- Button Elements ---
            const playButton = document.getElementById('play-button');
            const mobilePlayButton = document.getElementById('mobile-play-button');
            const trailerButton = document.getElementById('trailer-button');
            const mobileTrailerButton = document.getElementById('mobile-trailer-button');
            const addToWatchlistBtn = document.getElementById('add-to-watchlist-btn');

            let currentEPIndex = 0; // Index starting at 0
            const totalEPs = EPData.length;

            function populateReviewSection() {
                // ... (Original Review Population Logic - Kept same)
                document.title = `Review & Watch ${selectedAnime.title} - Anikan`;
                document.getElementById('hero-banner-section').style.backgroundImage = `linear-gradient(to top, var(--color-background) 10%, rgba(0,0,0,0.3)), url('${selectedAnime.bgImage}')`;
                document.getElementById('anime-title-main').textContent = selectedAnime.title;
                document.getElementById('hero-meta-year').textContent = selectedAnime.releaseYear;
                document.getElementById('hero-meta-type').textContent = selectedAnime.type;
                document.getElementById('hero-meta-duration').textContent = `${selectedAnime.duration}`;
                document.getElementById('anime-poster').src = selectedAnime.coverImage;
                document.getElementById('info-title').textContent = selectedAnime.title;
                document.getElementById('info-cast').textContent = selectedAnime.cast.join(', ');
                document.getElementById('info-creator').textContent = selectedAnime.creator;
                document.getElementById('info-genre').textContent = selectedAnime.genres.join(', ');
                const ratingCircle = document.getElementById('rating-circle');
                document.getElementById('rating-score').textContent = selectedAnime.rating;
                ratingCircle.style.setProperty('--rating-percent', selectedAnime.rating * 10);
                document.getElementById('synopsis-text').textContent = selectedAnime.description;
                document.getElementById('photos-grid').innerHTML = selectedAnime.gallery.map(img => `<img src="${img}" alt="Gallery image">`).join('');
                document.getElementById('trailer-player').src = selectedAnime.trailer_url;
                document.getElementById('character-list').innerHTML = selectedAnime.characters.map(char =>
                    `<div class="character-card"><img src="${char.image}" alt="${char.name}"><h4>${char.name}</h4></div>`
                ).join('');
                document.getElementById('anime-audience').textContent = selectedAnime.audience;
                const officialStreamsContainer = document.getElementById('official-streams');
                officialStreamsContainer.innerHTML = selectedAnime.official_streams.map(stream =>
                    `<a href="#" class="stream-logo"><img src="${stream.logo}" alt="${stream.platform}"></a>`
                ).join('');
                
                // Populate Sidebar Info
                document.getElementById('sidebar-poster').src = selectedAnime.coverImage;
                document.getElementById('sidebar-title').textContent = selectedAnime.title;
                document.getElementById('sidebar-type').textContent = selectedAnime.type;
                document.getElementById('sidebar-EPs').textContent = selectedAnime.EPs;
                document.getElementById('sidebar-duration').textContent = selectedAnime.duration;
                document.getElementById('sidebar-studio').textContent = selectedAnime.studio;
                document.getElementById('sidebar-score').textContent = selectedAnime.rating + '/10';
                document.getElementById('sidebar-genres').textContent = selectedAnime.genres.join(', ');
            }
            
            // --- NEW LOGIC: Using EPData constant ---

            function updateUI(EPIndex) {
                currentEPIndex = parseInt(EPIndex, 10);
                const EP = EPData[currentEPIndex];
                
                if (!EP) return;
                
                const EPNumber = EP.number;
                // Use regex to get the part of the title after the number/colon for cleaner display in the H1
                const displayTitle = EP.title.match(/(?::\s?)(.*)/)?.[1] || EP.title;

                currentEPTitle.textContent = `You are watching EP ${EPNumber} - ${displayTitle}`;
                
                // 1. Update Video Player
                videoPlayer.src = EP.videoUrl;

                // 2. Update Download Links
                downloadLinksTbody.innerHTML = '';
                const downloadQualities = Object.keys(EP.downloads);
                const subtitleUrl = EP.subtitleUrl || '#';
                
                if (downloadQualities.length > 0) {
                     downloadQualities.forEach(quality => {
                        const downloadUrl = EP.downloads[quality];
                        downloadLinksTbody.innerHTML += `
                            <tr>
                                <td data-label="EP">EP ${EPNumber}</td>
                                <td data-label="Quality">${quality}</td>
                                <td data-label="Video"><a href="${downloadUrl}" class="download-btn" target="_blank" rel="noopener noreferrer"><i class="fas fa-download"></i> Download</a></td>
                                <td data-label="Subtitles"><a href="${subtitleUrl}" class="download-btn" target="_blank" rel="noopener noreferrer"><i class="fas fa-closed-captioning"></i> Download</a></td>
                            </tr>`;
                    });
                } else {
                    downloadLinksTbody.innerHTML = `<tr><td colspan="4" style="text-align: center; color: var(--color-text-muted);">Download links not available for this EP.</td></tr>`;
                }
                
                // 3. Update EP List Active State and scroll
                EPsListContainer.querySelectorAll('.EP-item').forEach(link => link.classList.remove('current'));
                const activeEPLink = EPsListContainer.querySelector(`.EP-item[data-EP='${EPNumber}']`);
                if (activeEPLink) {
                    activeEPLink.classList.add('current');
                    activeEPLink.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
                }

                // 4. Update Navigation Buttons
                prevBtn.disabled = EPNumber === 1;
                nextBtn.disabled = EPNumber === totalEPs;
            }

            function generateEPList() {
                EPsListContainer.innerHTML = '';
                EPData.forEach((ep, index) => {
                    const EPNumber = ep.number;
                    const EPTitle = ep.title.match(/(?::\s?)(.*)/)?.[1] || ep.title; // Clean up title for display
                    
                    const itemHTML = `
                        <a class="EP-item" data-EP="${EPNumber}" data-EP-index="${index}">
                            <img src="${ep.thumbnail}" alt="Ep ${EPNumber}" class="EP-thumbnail">
                            <div class="ep-info">
                                <p class="ep-number">EP ${EPNumber}</p>
                                <p class="ep-desc">${EPTitle}</p>
                            </div>
                        </a>
                    `;
                    EPsListContainer.innerHTML += itemHTML;
                });
                
                // Attach click listeners to the generated list items
                EPsListContainer.querySelectorAll('.EP-item').forEach(item => {
                    item.addEventListener('click', (e) => {
                        e.preventDefault();
                        updateUI(item.dataset.EPIndex);
                    });
                });
            }


            // --- Event Handlers ---
            const handlePlayClick = () => {
                document.body.classList.add('watching-active');
                window.scrollTo({ top: 0, behavior: 'smooth' });
                
                generateEPList(); // Generate list and attach click handlers
                
                // Initialize the player with the first EP
                if (EPData.length > 0) {
                    updateUI(0);
                }
            };
            
            const handleTrailerClick = () => {
                const trailerElement = document.getElementById('trailer-player');
                if (trailerElement) {
                    trailerElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            };
            
            const handleAddToWatchlist = async () => {
                // Placeholder logic as in original
                const username = null; // Assuming no user is logged in
                if (!username) {
                    alert('Please log in to add to your watchlist.');
                    // window.location.href = '/login.html';
                    return;
                }
            };

            // --- Navigation Event Listeners ---
            prevBtn.addEventListener('click', () => { 
                if (currentEPIndex > 0) updateUI(currentEPIndex - 1); 
            });
            nextBtn.addEventListener('click', () => { 
                if (currentEPIndex < totalEPs - 1) updateUI(currentEPIndex + 1); 
            });

            // --- Other Event Listeners ---
            playButton.addEventListener('click', handlePlayClick);
            mobilePlayButton.addEventListener('click', handlePlayClick);
            trailerButton.addEventListener('click', handleTrailerClick);
            mobileTrailerButton.addEventListener('click', handleTrailerClick);
            addToWatchlistBtn.addEventListener('click', handleAddToWatchlist);

            // --- Initialize Page ---
            populateReviewSection();
        });
    </script>
</body>
</html>